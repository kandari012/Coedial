{let e=function(){let e=$("#new-post-form");e.submit((function(l){l.preventDefault(),$.ajax({type:"post",url:"/posts/create",data:e.serialize(),success:function(e){let l=t(e.data);$("#post-list-container>ul").prepend(l),o($(" .delete-post-button",l)),r($(" .like",l)),n($(" .new-comment-form",l)),i("Post Created")},error:function(e){a(e),console.log(e.responseText)}})}))},t=function(e){return $(`<li id="post-${e.post._id}">\n    \x3c!-- check user exist and can only see delete if the user created the post is\n      loged in  --\x3e\n    \n    <small><a class="delete-post-button" href="/posts/destroy/${e.post._id}">Delete</a></small>\n   \n    <small>\n    <a class="like" href="likes/toggle/?id=${e.post._id}&type=Post"\n      >like ${e.post.likes.length}</a\n    ></small\n  >\n    <p>${e.post.content}</p>\n        <p>${e.username}</p>\n    <div>\n      \n      <form action="/comments/create" method="POST" class="new-comment-form">\n        <input\n          type="text"\n          name="content"\n          placeholder="Type your comment here"\n          required\n        />\n        \x3c!-- hidden field --\x3e\n        <input type="hidden" name="post" value="${e.post._id}" />\n        <input type="submit" value="Add Comment" />\n      </form>\n      \n  \n      <div class="comment-list-container">\n        <ul id="post-comments-${e.post._id}">\n         \n        </ul>\n      </div>\n    </div>\n  </li>\n  `)},o=function(e){console.log("ajax called to delete post",e),$(e).click((function(t){t.preventDefault(),$.ajax({type:"get",url:$(e).prop("href"),success:function(e){$(`#post-${e.data.post_id}`).remove(),i("Post Deleted")},error:function(e){a(e),console.log("error.responseText")}})}))},n=function(e){console.log("addcomment",e),$(e).submit((function(t){t.preventDefault(),$.ajax({type:"post",url:"/comments/create",data:$(e).serialize(),success:function(e){let t=l(e.data),o=`post-comments-${e.data.post_id}`;$(`#${o}`).prepend(t),s($(" .delete-comment-button",t)),r($(" .like",t)),i("Comment Created")},error:function(e){a(e),console.log(e.responseText)}})}))},l=function(e){return $(`<li id="comment-${e.comment._id}">\n\n<small><a class="delete-comment-button" href="/comments/destroy/${e.comment._id}">Delete</a></small>\n\n<small\n    ><a class="like" href="likes/toggle/?id=${e.comment._id}&type=Comment"\n      >like ${e.comment.likes.length}</a\n    ></small\n  >\n<p>${e.comment.content}</p>\n<small>${e.username}</small>\n</li>`)},s=function(e){console.log("ajax called to delete comment",e),console.log("link",$(e).prop("href")),console.log($(e)),$(e).click((function(t){t.preventDefault(),console.log("remove natural behaviour"),$.ajax({type:"get",url:$(e).prop("href"),success:function(e){$(`#comment-${e.data.comment_id}`).remove(),i("Comment Deleted")},error:function(e){a(e),console.log("error.responseText")}})}))},c=function(){e();let t=$(".delete-post-button");for(let e of t)o($(e));let l=$(".new-comment-form");for(const e of l)n(e);let c=$(".delete-comment-button");for(let e of c)console.log("data to delete comment",$(e)),s($(e));let i=$(".like");for(let e of i)console.log("data to like",$(e)),r($(e))},i=function(e){new Noty({theme:"relax",text:e,type:"success",layout:"topRight",timeout:1500}).show()},a=function(e){new Noty({theme:"relax",text:e,type:"error",layout:"topRight",timeout:1500}).show()},r=function(e){console.log("ajax called to like",e),$(e).click((function(t){t.preventDefault(),$.ajax({type:"get",url:$(e).prop("href"),success:function(e){i("liked");let t=$(`#comment-${e.data.likeable._id}`),o=$(`#post-${e.data.likeable._id}`);$(" .like",t).html(`Like ${e.data.likeable.likes.length}`),$(" .like",o).first().html(`Like ${e.data.likeable.likes.length}`),console.log($(" .like",t)),console.log($(" .like",o))},error:function(e){a(e),console.log("error.responseText")}})}))};c()}